package dsltimeloggingsystem;

import java.awt.Color;
import java.awt.Font;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author L R E
 */
public class FilterSystemLogs extends javax.swing.JFrame {

    /**
     * Creates new form FilterSystemLogs
     */
    private static List<User> employees = new ArrayList<User>();
    private static User sessionUser = null;
    private static List<UserLogs> logs = null;
    private static ArrayList<String> employeePages = new ArrayList<String>();
     private final JPanel panel = new JPanel();
    public void FillComboBox() throws SQLException, ClassNotFoundException{
        employees = DB.getUsers();
        String [] employeeNames = null;
        jComboBox1.addItem("Filter All");
        for(int i = 0; i < employees.size(); i++){
            String name = employees.get(i).getFirstName() + " " + employees.get(i).getLastName();
            jComboBox1.addItem(name);
        }

    }
    
    public FilterSystemLogs(User user, ArrayList<String> employeePages) throws SQLException, ClassNotFoundException, ParseException {
        this.sessionUser = user;
        this.employeePages = employeePages;
        initComponents();
        FillComboBox();
        lblTitle.setHorizontalAlignment(JLabel.CENTER);
        lblNotice.setFont(new Font(lblNotice.getFont().getName(),Font.ITALIC,lblNotice.getFont().getSize()));
        lblNotice.setHorizontalAlignment(JLabel.CENTER);
        DB.setUserLogStatus(user.getEmployeeID(),"Page Visit", "Filter System Logs");
    }
    
    public static List<UserLogs> getUserLogs(){
        return logs;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        lblNotice = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        label2 = new java.awt.Label();
        btnFilter = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblDateInputNotice = new javax.swing.JLabel();
        txtStartDate = new com.github.lgooddatepicker.components.DatePicker();
        txtEndDate = new com.github.lgooddatepicker.components.DatePicker();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Filter System Logs");
        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel3.setText("Select Employee:");
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));

        lblNotice.setText("for date, use this format yyyy-mm-dd");

        jLabel2.setText("Date:");

        label2.setText("to");

        btnFilter.setText("Filter");
        btnFilter.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblDateInputNotice.setText("Date Inputs can be blank. If blank, this will filter for the whole month.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblNotice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblDateInputNotice, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(22, 22, 22)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(btnCancel)
                                .addGap(92, 92, 92)
                                .addComponent(btnFilter)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblNotice)
                .addGap(18, 18, 18)
                .addComponent(lblDateInputNotice)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(txtEndDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnFilter))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        boolean error = false;
        int employeeID = 0;
//        String startDate = txtStartDate.getText();
//        String endDate = txtEndDate.getText();
        String startDate = txtStartDate.getDateStringOrEmptyString();
        String endDate = txtEndDate.getDateStringOrEmptyString();
        String name = (String) jComboBox1.getSelectedItem();
        try {
            Calendar cal = Calendar.getInstance();
            Calendar cal1 = Calendar.getInstance();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            sdf.setLenient(false);       
            Date dateStart = sdf.parse(startDate);
            cal.setTime(dateStart);
            Date dateEnd = sdf.parse(endDate);
            cal.setTime(dateEnd);
        } catch (ParseException ex) {
            Logger.getLogger(FilterSystemLogs.class.getName()).log(Level.SEVERE, null, ex);
            error = true;
        }
        if(error == true){
            JOptionPane.showMessageDialog(panel, "Date Not parseable", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            try {
                if(!name.equals("Filter All")){
                    employeeID = DB.getEmployeeIDFromName(name);
                }
                logs = DB.getSystemLogs(employeeID, startDate, endDate, "filter");
                SystemLogs systemLogs;
                this.setVisible(false);
                systemLogs = new SystemLogs(this.sessionUser, this.employeePages);
                systemLogs.setVisible(true);
                systemLogs.setTitle("DSL Time Logging | System Logs");
                systemLogs.pack();
                systemLogs.setLocationRelativeTo(null);
                systemLogs.setDefaultCloseOperation(0);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(FilterSystemLogs.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(FilterSystemLogs.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(FilterSystemLogs.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        

    }//GEN-LAST:event_btnFilterActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            SystemLogs systemLogs;
            this.setVisible(false);
            systemLogs = new SystemLogs(this.sessionUser, this.employeePages);
            systemLogs.setVisible(true);
            systemLogs.setTitle("DSL Time Logging | System Logs");
            systemLogs.pack();
            systemLogs.setLocationRelativeTo(null);
            systemLogs.setDefaultCloseOperation(0);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnFilter;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private java.awt.Label label2;
    private javax.swing.JLabel lblDateInputNotice;
    private javax.swing.JLabel lblNotice;
    private javax.swing.JLabel lblTitle;
    private com.github.lgooddatepicker.components.DatePicker txtEndDate;
    private com.github.lgooddatepicker.components.DatePicker txtStartDate;
    // End of variables declaration//GEN-END:variables
}
